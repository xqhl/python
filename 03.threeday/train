# 基本数据类型: 整型int; 浮点型float; 字符串str; 布尔值bool;

# 整型int:
# 支持的计算操作符: + - * / %(取余) //(取整) **(取方)
                +=(指定累加) -=(指定递减) *=(指定阶乘)
# 定义: 自然数就是python中的整型数据


# 浮点型float:
# 同上
# 类型转化: 取整int(float_data) "保留两位小数: {:.2f}.format(float_data)"


# 字符串str:
# 支持的计算操作: +(拼接) *(重复输出)
# 字符串中涉及到的方法:
    - join()            拼接
    - replace()         替换
    - split()           切割
    - strip()           删除首尾指定字符
    - upper()/lower()   大小写转换
    - isdigit()         是否为纯数字
    - isalpha()         是否为纯字母
    - isspace()         是否为空格或回车
    - isidentifier()    是否为特殊字符
# 字符串的切片: string[n:m:step] # step是负数则反序打印


# 布尔值bool:
# 所支持的计算: and or not
# 会返回布尔值的运算符: == in != > < >= <=



# 基本的数据结构: 元组tuple; 列表list; 字典dict; 集合set;
# 表现形式:
    - tuple = (1, 2, 3)
    - list = [1, 2, 3]
    - dict = {0: 1, 1: 2, 2: 3}
    - set = {0, 1, 2}
# 重点掌握: 列表及字典 -> json:由列表和字典组成的字符串叫做json,并且还可以与现有的字典列表进行转化

# 元组: 应用场景在 长期声明固定大小的数据
# 列表: ~ 长期声明会变化的数据
# 字典: ~ 长期声明统计类型的数据
# 集合: ~ 长期声明唯一数据,并作为判断使用

# tuple() list() dict() set() 都可以把相应的序列进行类型的强制转换

# 四种基本数据结构中的方法, 大多相通, 在使用过程中可以仿照使用;

# 四种数据结构为python数据分析的基石.
